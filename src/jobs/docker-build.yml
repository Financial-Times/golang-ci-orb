description: >
  This job performs Docker build using the Dockerfile
  of the current checkout project.
parameters:
  working-dir:
    description: Working directory for this job
    type: string
    default: project
  base-image:
    description: |
      Docker base image. The default is image provided by CircleCI.
      More info here https://circleci.com/docs/2.0/circleci-images/
    type: string
    default: "cimg/base:2021.04"
  dockerhub-username:
    description: username for login in dockerhub to download base image
    type: env_var_name
    default: DOCKERHUB_USERNAME
  dockerhub-token:
    description: access token for login in dockerhub to download base image
    type: env_var_name
    default: DOCKERHUB_ACCESS_TOKEN
  github-username:
    description: username of user with access to private github repositories
    type: env_var_name
    default: GITHUB_USERNAME
  github-token:
    description: >
      token to for the user with access to private github repositories
    type: env_var_name
    default: GITHUB_TOKEN
working_directory: /home/circleci/<<parameters.working-dir>>
docker:
  - image: <<parameters.base-image>>
#    auth:
#      username: ${<<parameters.dockerhub-username>>}
#      password: ${<<parameters.dockerhub-token>>}
steps:
  - checkout
  - docker/dockerlint:
      treat-warnings-as-errors: true
  - docker/check:
      docker-username: <<parameters.dockerhub-username>>
      docker-password: <<parameters.dockerhub-token>>
#  - setup_remote_docker
  - run:
      name: Set env vars from GITHUB_USERNAME
      command: >
        export GITHUB_USERNAME=${<<parameters.github-username>>}
  - run:
      name: Set env vars from GITHUB_TOKEN
      command: >
        export GITHUB_TOKEN=${<<parameters.github-token>>}
  - docker/build:
#      name: Build Docker image
      image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
#      docker-username: <<parameters.dockerhub-username>>
#      docker-password: <<parameters.dockerhub-token>>
#  - run:
#      name: Build Dockerfile
#      command: <<include(scripts/build-dockerfile.sh)>>
